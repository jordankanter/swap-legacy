#Processed by Id: cwm.py,v 1.96 2002/06/07 20:07:17 timbl Exp 
        #    using base file:/devel/WWW/2000/10/swap/test/fink/web.info3
        
#  Notation3 generation by
#       notation3.py,v 1.108 2002/05/15 00:38:10 timbl Exp

#   Base was: file:/devel/WWW/2000/10/swap/test/fink/web.info3
     @prefix : <http://www.w3.org/2000/10/swap/util/fink-pkg#> .
     @prefix con: <http://www.w3.org/2000/10/swap/pim/contact#> .
     @prefix fink: <http://www.w3.org/2000/10/swap/util/fink#> .
     @prefix lic: <http://www.w3.org/2000/10/swap/util/fink-lic#> .
     @prefix log: <http://www.w3.org/2000/10/swap/log#> .
     @prefix os: <http://www.w3.org/2000/10/swap/os#> .
     @prefix string: <http://www.w3.org/2000/10/swap/string#> .
    
    :amaya     fink:packageName "amaya";
         fink:specificVersion :amaya_v5_3 .
    
    :amaya_v5_3     fink:specificRevision :amaya_v5_3_r2,
                :amaya_v5_3_r3;
         fink:version "5.3" .
    
    :amaya_v5_3_r2     fink:buildDepends :lesstif_dev,
                :libjpeg,
                :libpng,
                :libwww;
         fink:compileScript """	mkdir Darwin
	cd 'Darwin' && ../configure --prefix=%p/lib --bindir=%p/bin && make
""";
         fink:customMirror """	Primary:  http://www.w3.org/Amaya/Distribution
	ftp-US:   ftp://ftp.w3.org/pub/amaya
	ftp-AU:   ftp://mirror.aarnet.edu.au/pub/amaya
""";
         fink:depends :dlcompat,
                :lesstif,
                :libjpeg_shlibs,
                :libpng_shlibs,
                :zlib;
         fink:descDetail """	Amaya is a complete web browsing and authoring 
	environment and comes equipped with a "WYSIWYG style" 
	of interface, similar to that of the most popular commercial 
	browsers. With such an interface, users can easily generate
	HTML and XHTML pages, as well as CSS style sheets, MathML
	expressions, and SVG drawings (full support of SVG is not yet
	available, though).
	Amaya includes a collaborative annotation application based
	on Resource Description Framework (RDF), XLink, and
	XPointer.
""";
         fink:descPackaging """	Patches the configure script to stop it checking for appkit
	(bad amaya) and adds -force_flat_namespace to Options.in.
	Slight hack to make Amaya install in /sw/lib/Amaya with
	link from /sw/bin/amaya to amaya executable. (Default would
	have /sw/Amaya, which isn't pretty).

	Changes:
	/sw no longer hardcoded.
	configure now searches in the correct place for lesstif.
	(This uses some fancy footwork thanks to David R. Morrison)
	Amaya/amaya/Makefile.libwww patched to use Amaya's libwww,
	so it now builds even with fink's libwww installed.
""";
         fink:description "W3C's Editor/Browser";
         fink:docFiles "README README.amaya amaya/COPYRIGHT";
         fink:homepage "http://www.w3.org/Amaya/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/amaya-5.3-2.info>;
         fink:installScript """	cd 'Darwin' && make install prefix=%i/lib bindir=%i/bin
	cd %i/bin && ln -sf ../lib/Amaya/applis/bin/amaya amaya
""";
         fink:license "OSI-Approved";
         fink:maintainer  [
             con:firstName "Damian";
             con:lastName "Steer";
             con:mailbox <mailto:pldms@mac.com> ];
         fink:patchScript "sed 's|@FINK@|%p|g' < %a/%f.patch | patch -p1";
         fink:replaces :amaya_gtk;
         fink:revision "http://www.w3.org/Amaya/";
         fink:source "mirror:custom:amaya-src-%v.tgz";
         fink:sourceDirectory "Amaya";
         fink:updateConfigGuess "true" .
    
    :amaya_v5_3_r3     fink:buildDepends :lesstif_dev,
                :libjpeg,
                :libpng;
         fink:compileScript """	mkdir Darwin
	cd 'Darwin' && ../configure --prefix=%p/lib --bindir=%p/bin && make
""";
         fink:customMirror """	Primary:  http://www.w3.org/Amaya/Distribution
	ftp-US:   ftp://ftp.w3.org/pub/amaya
	ftp-AU:   ftp://mirror.aarnet.edu.au/pub/amaya
""";
         fink:depends :dlcompat,
                :lesstif,
                :libjpeg_shlibs,
                :libpng_shlibs,
                :libwww,
                :zlib;
         fink:descDetail """	Amaya is a complete web browsing and authoring 
	environment and comes equipped with a "WYSIWYG style" 
	of interface, similar to that of the most popular commercial 
	browsers. With such an interface, users can easily generate
	HTML and XHTML pages, as well as CSS style sheets, MathML
	expressions, and SVG drawings (full support of SVG is not yet
	available, though).
	Amaya includes a collaborative annotation application based
	on Resource Description Framework (RDF), XLink, and
	XPointer.
""";
         fink:descPackaging """	Patches the configure script to stop it checking for appkit
	(bad amaya) and adds -force_flat_namespace to Options.in.
	Slight hack to make Amaya install in /sw/lib/Amaya with
	link from /sw/bin/amaya to amaya executable. (Default would
	have /sw/Amaya, which isn't pretty).

	Changes:
	/sw no longer hardcoded.
	configure now searches in the correct place for lesstif.
	(This uses some fancy footwork thanks to David R. Morrison)
	Amaya/amaya/Makefile.libwww patched to use Amaya's libwww,
	so it now builds even with fink's libwww installed.

	libwww dependency added. Doh.
""";
         fink:description "W3C's Editor/Browser";
         fink:docFiles "README README.amaya amaya/COPYRIGHT";
         fink:homepage "http://www.w3.org/Amaya/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/amaya-5.3-3.info>;
         fink:installScript """	cd 'Darwin' && make install prefix=%i/lib bindir=%i/bin
	cd %i/bin && ln -sf ../lib/Amaya/applis/bin/amaya amaya
""";
         fink:license "OSI-Approved";
         fink:maintainer  [
             con:firstName "Damian";
             con:lastName "Steer";
             con:mailbox <mailto:pldms@mac.com> ];
         fink:patchScript "sed 's|@FINK@|%p|g' < %a/%f.patch | patch -p1";
         fink:replaces :amaya_gtk;
         fink:revision "http://www.w3.org/Amaya/";
         fink:source "mirror:custom:amaya-src-%v.tgz";
         fink:sourceDirectory "Amaya";
         fink:updateConfigGuess "true" .
    
    :apache     fink:packageName "apache";
         fink:specificVersion :apache_v1_3_20 .
    
    :apache_v1_3_20     fink:specificRevision :apache_v1_3_20_r3;
         fink:version "1.3.20" .
    
    :apache_v1_3_20_r3     fink:buildDepends :expat,
                :gdbm,
                :gmp,
                :libxml2,
                :tcltk_dev;
         fink:confFiles """%p/etc/httpd/httpd.conf
%p/etc/httpd/access.conf
%p/etc/httpd/srm.conf
%p/etc/httpd/magic
%p/etc/httpd/mime.types
""";
         fink:configureParams "--mandir=%p/share/man --libexecdir=%p/lib/apache/1.3 --with-layout=GNU --enable-module=most --enable-shared=max";
         fink:daemonicFile """<service>
<description>Apache HTTP server</description>
<message>Apache web server</message>

<daemon name="apache">
<executable checkexit="true">%p/sbin/httpd</executable>
<configfile>%p/etc/httpd/httpd.conf</configfile>
<pidfile>%p/var/httpd/run/httpd.pid</pidfile>
</daemon>

</service>
""";
         fink:depends :daemonic;
         fink:descDetail """Apache is an industrial grade web server. In fact, it is the number
one server on the net. It is modular and extensible, using dynamic
loading for modules.
""";
         fink:descUsage """Edit the configuration files in /sw/etc/httpd to fit your needs. You
may want to change the DocumentRoot to keep both you and the package
system happy. When you're ready, make sure the shipped webserver is
disabled and run 'daemonic enable apache' as root. That will create a
startup item that starts apache after the next reboot. You can also
start it manually via 'apachectl' (but be sure you get the right one).

To disable the server, run 'daemonic disable apache' as root. This
will not kill a running server at this time. If you don't know how to
kill the server yourself, reboot the machine to get rid of it.
""";
         fink:description "Flexible and extensible web server";
         fink:docFiles "ABOUT_APACHE LICENSE README Announcement";
         fink:homepage "http://httpd.apache.org/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/apache-1.3.20-3.info>;
         fink:installScript "make install root=%d";
         fink:license "BSD";
         fink:maintainer  [
             con:mailbox <mailto:fink-devel@lists.sourceforge.net> ];
         fink:noSetCPPFLAGS "true";
         fink:noSetLDFLAGS "true";
         fink:patch "%f.patch";
         fink:preRmScript """# clean up
if [ $1 != "upgrade" ]; then
  daemonic remove apache
fi
""";
         fink:revision "None <fink-devel@lists.sourceforge.net>";
         fink:source "http://httpd.apache.org/dist/httpd/old/%n_%v.tar.gz" .
    
    :aria     fink:packageName "aria";
         fink:specificVersion :aria_v0_10_0 .
    
    :aria_v0_10_0     fink:specificRevision :aria_v0_10_0_r2;
         fink:version "0.10.0" .
    
    :aria_v0_10_0_r2     fink:buildDepends :glib;
         fink:depends :gtk_plus;
         fink:descDetail """Aria is another download tool, similar to GetRight. It can download
files via HTTP or FTP, supports proxies and drag and drop support for
the Mozilla, Galeon, Konqueror, Opera and Netscape browsers.
""";
         fink:descPort """SetCPPFLAGS set to '-Dsocklen_t=int' to compile properly.
Config.guess and config.sub files updated for Darwin compatibility.
UpdatePoMakefile set to 'true' to install files into proper directories.
""";
         fink:description "File downloader, similar to GetRight.";
         fink:docFiles "COPYING ChangeLog NEWS README TODO";
         fink:homepage "http://aria.rednoah.com/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/aria-0.10.0-2.info>;
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Jeremy";
             con:lastName "Higgs";
             con:mailbox <mailto:jhiggs@iprsystems.com> ];
         fink:revision """SetCPPFLAGS set to '-Dsocklen_t=int' to compile properly.
Config.guess and config.sub files updated for Darwin compatibility.
UpdatePoMakefile set to 'true' to install files into proper directories.
""";
         fink:setCPPFLAGS "-Dsocklen_t=int";
         fink:source "http://rabien.virtualave.net/linux/storage/sources/%n-%v.tar.bz2";
         fink:updateConfigGuess "true";
         fink:updatePoMakefile "true" .
    
    :dillo     fink:packageName "dillo";
         fink:specificVersion :dillo_v0_6_4 .
    
    :dillo_v0_6_4     fink:specificRevision :dillo_v0_6_4_r1;
         fink:version "0.6.4" .
    
    :dillo_v0_6_4_r1     fink:buildDepends :glib,
                :libjpeg,
                :libpng;
         fink:customMirror """ nam-US: http://telia.dl.sourceforge.net/sourceforge/
 nam-US: http://unc.dl.sourceforge.net/sourceforge/
 eur-BE: http://belnet.dl.sourceforge.net/sourceforge/
""";
         fink:depends :gtk_plus,
                :libjpeg_shlibs,
                :libpng_shlibs;
         fink:description "Small simple web browser";
         fink:docFiles "README COPYING AUTHORS NEWS doc/*.txt";
         fink:homepage "http://dillo.sourceforge.net";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/dillo-0.6.4-1.info>;
         fink:installScript "make install DESTDIR=%d";
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Max";
             con:lastName "Horn";
             con:mailbox <mailto:max@quendi.de> ];
         fink:revision "http://dillo.sourceforge.net";
         fink:setCPPFLAGS "-no-cpp-precomp";
         fink:source "mirror:custom:%n/%n-%v.tar.gz" .
    
    :junkbuster     fink:packageName "junkbuster";
         fink:specificVersion :junkbuster_v2_0_2 .
    
    :junkbuster_v2_0_2     fink:specificRevision :junkbuster_v2_0_2_r1;
         fink:version "2.0.2" .
    
    :junkbuster_v2_0_2_r1     fink:buildDepends :expat,
                :gdbm,
                :gmp,
                :libxml2,
                :tcltk_dev;
         fink:compileScript "make";
         fink:confFiles """%p/etc/junkbuster/junkbstr.ini
%p/etc/junkbuster/sblock.ini
%p/etc/junkbuster/scookie.ini
%p/etc/junkbuster/saclfile.ini
%p/etc/junkbuster/sforward.ini
%p/etc/junkbuster/strust.ini
""";
         fink:daemonicFile """<service>
<description>Internet Junkbuster Proxy (TM)</description>
<message>Internet Junkbuster Proxy</message>

<daemon name="junkbuster">
<executable background="true">%p/sbin/junkbuster %p/etc/junkbuster/junkbstr.ini</executable>
<configfile>%p/etc/junkbuster/junkbstr.ini</configfile>
</daemon>

</service>
""";
         fink:depends :daemonic;
         fink:descDetail """The Internet Junkbuster Proxy (TM) blocks unwanted banner ads and
protects your privacy from cookies and other threats.
""";
         fink:descUsage """edit the configuration files in /sw/etc/junkbuster to fit your needs.
in the default configuration, you can just run
  'daemonic enable junkbuster' 
and in your browser set the proxy to
  localhost 8080
note: junkbuster doesn't handle keep alive connections correctly. in mozilla,
  you can circumvent problems by switching off keep alive in the
  debug/networking settings.
""";
         fink:description "The Internet Junkbuster Proxy (TM)";
         fink:docFiles "README gpl.html ijbman.html ijbfaq.html";
         fink:homepage "http://internet.junkbuster.com/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/junkbuster-2.0.2-1.info>;
         fink:installScript """mkdir -p %d%p/sbin
mkdir -p %d%p/etc/junkbuster
mkdir -p %d%p/share/man/man1
cp junkbuster %d%p/sbin
cp junkbuster.1 %d%p/share/man/man1
cp junkbstr.ini %d%p/etc/junkbuster
cp sblock.ini %d%p/etc/junkbuster
cp scookie.ini %d%p/etc/junkbuster
cp saclfile.ini %d%p/etc/junkbuster
cp sforward.ini %d%p/etc/junkbuster
cp strust.ini %d%p/etc/junkbuster
""";
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Kilian";
             con:lastName "Koepsell";
             con:mailbox <mailto:kilian@users.sourceforge.net> ];
         fink:patchScript """perl -pi -e 's/\\r\\n$/\\n/g' *.ini
patch -p1 < %a/%f.patch
perl -pi -e '$p=qw(%p);s/\\@PREFIX\\@/$p/' junkbstr.ini 
""";
         fink:preRmScript """# clean up
if [ $1 != "upgrade" ]; then
  daemonic remove junkbuster
fi
""";
         fink:revision "Kilian Koepsell <kilian@users.sourceforge.net>";
         fink:source "http://www.junkbusters.com/ijb20.tar.Z";
         fink:sourceDirectory "ijb20";
         fink:sourceRename "junkbuster-%v.tar.Z" .
    
    :links     fink:packageName "links";
         fink:specificVersion :links_v0_96 .
    
    :links_v0_96     fink:specificRevision :links_v0_96_r1;
         fink:version "0.96" .
    
    :links_v0_96_r1     fink:configureParams "--without-ssl";
         fink:conflicts :links_ssl;
         fink:descPort "No SSL support. Install the links-ssl package instead to";
         fink:description "Lynx-like text WWW browser with tables";
         fink:docFiles "AUTHORS BUGS COPYING ChangeLog NEWS README SITES TODO";
         fink:homepage "http://artax.karlin.mff.cuni.cz/~mikulas/links/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/links-0.96-1.info>;
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Finlay";
             con:lastName "Dobbie";
             con:mailbox <mailto:finlayd@users.sourceforge.net> ];
         fink:replaces :links_ssl;
         fink:revision "http://artax.karlin.mff.cuni.cz/~mikulas/links/";
         fink:source "http://artax.karlin.mff.cuni.cz/~mikulas/links/download/links-%v.tar.gz" .
    
    :lynx     fink:packageName "lynx";
         fink:specificVersion :lynx_v2_8_4 .
    
    :lynx_v2_8_4     fink:specificRevision :lynx_v2_8_4_r1;
         fink:version "2.8.4" .
    
    :lynx_v2_8_4_r1     fink:confFiles "%p/etc/lynx.cfg";
         fink:configureParams "--enable-nls --with-screen=ncurses --disable-full-paths --enable-file-upload --enable-internal-links --libdir=%p/etc --mandir=%p/share/man";
         fink:conflicts :lynx_ssl;
         fink:descDetail """Lynx is a web browser that runs inside a terminal emulator,
e.g. Terminal.app or an xterm. It can't display graphics and also has
trouble with tables, but it can come in handy in some situations.

This package builds Lynx without SSL/https support. Install the
lynx-ssl package instead if you need it.
""";
         fink:descPackaging """The Makefile for the message catalogs doesn't respect DESTDIR, we work
around that by setting the installation paths on the command line.

Putting lynx.cfg in etc/ and the documentation elsewhere is a problem
because the configure script uses libdir for both. Fortunately, only
the path to lynx.cfg is hardcoded into the executable. So we set
libdir to etc/ and override the doc and help directories in the
install step. The Makefile edits lynx.cfg on the fly in the install
step, so all paths are correct.

COPYING and COPYHEADER are symlinked from the help dir to the doc dir,
but using the full path (with the package build directory in it). We
correct that manually.
""";
         fink:descPort """Doesn't do color in Terminal.app and xterms; this can probably be
cured by adjusting the terminfo data.
""";
         fink:description "Console based web browser";
         fink:homepage "http://lynx.browser.org/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/lynx-2.8.4-1.info>;
         fink:installScript """ mkdir -p %i/etc
 make install-full DESTDIR=%d docdir=%p/share/doc/%n helpdir=%p/share/lynx_help localedir=%i/share/locale gnulocaledir=%i/share/locale
 (cd %i/share/lynx_help && rm -f COPYHEADER COPYING && cp ../doc/%n/COPYHEADER ../doc/%n/COPYING .)
""";
         fink:license "GPL";
         fink:maintainer  [
             con:mailbox <mailto:fink-devel@lists.sourceforge.net> ];
         fink:replaces :lynx_ssl;
         fink:revision "None <fink-devel@lists.sourceforge.net>";
         fink:setLIBS "-lncurses";
         fink:source "ftp://lynx.isc.org/lynx%v/lynx%vrel.1.tar.bz2";
         fink:sourceDirectory "%n2-8-4" .
    
    :mhonarc     fink:packageName "mhonarc";
         fink:specificVersion :mhonarc_v2_5_2,
                :mhonarc_v2_5_3 .
    
    :mhonarc_v2_5_2     fink:specificRevision :mhonarc_v2_5_2_r1;
         fink:version "2.5.2" .
    
    :mhonarc_v2_5_2_r1     fink:compileScript "echo \"Nothing to do\"";
         fink:depends :digest_md5_pm;
         fink:descPackaging "Installation is done in two steps: in the first step, the";
         fink:description "Converts mail messages to HTML.";
         fink:docFiles "ACKNOWLG BUGS CHANGES COPYING FILELIST INSTALL README RELNOTES TODO VERSIONS";
         fink:homepage "http://www.mhonarc.org";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/mhonarc-2.5.2-1.info>;
         fink:installScript """perl install.me -batch -nodoc -nolib -noman -prefix %i -libpath %p/lib/mhonarc
perl install.me -batch -nobin -prefix %i -docpath %i/share/doc/mhonarc -libpath %i/lib/mhonarc
""";
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Dave";
             con:lastName "Morrison";
             con:mailbox <mailto:dmrrsn@users.sourceforge.net> ];
         fink:revision "Dave Morrison <dmrrsn@users.sourceforge.net>";
         fink:source "http://www.mhonarc.org/tar/MHonArc%v.tar.gz" .
    
    :mhonarc_v2_5_3     fink:specificRevision :mhonarc_v2_5_3_r1;
         fink:version "2.5.3" .
    
    :mhonarc_v2_5_3_r1     fink:compileScript "echo \"Nothing to do\"";
         fink:depends :digest_md5_pm;
         fink:descPackaging "Installation is done in two steps: in the first step, the";
         fink:description "Converts mail messages to HTML.";
         fink:docFiles "ACKNOWLG BUGS CHANGES FILELIST INSTALL README RELNOTES TODO";
         fink:homepage "http://www.mhonarc.org";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/mhonarc-2.5.3-1.info>;
         fink:installScript """perl install.me -batch -nodoc -nolib -noman -prefix %i -libpath %p/lib/mhonarc
perl install.me -batch -nobin -prefix %i -docpath %i/share/doc/mhonarc -libpath %i/lib/mhonarc
""";
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Dave";
             con:lastName "Morrison";
             con:mailbox <mailto:dmrrsn@users.sourceforge.net> ];
         fink:revision "Dave Morrison <dmrrsn@users.sourceforge.net>";
         fink:source "http://www.mhonarc.org/tar/MHonArc%v.tar.gz";
         fink:source-MD5 "c1552ba196b06a917a56abb880f45a94" .
    
    :mozilla     fink:packageName "mozilla";
         fink:specificVersion :mozilla_v0_9_8 .
    
    :mozilla_v0_9_8     fink:specificRevision :mozilla_v0_9_8_r1;
         fink:version "0.9.8" .
    
    :mozilla_v0_9_8_r1     fink:buildDepends :glib;
         fink:compileScript """./configure %c
make
sed -e 's|@PREFIX@|%p|g' fink/mozilla.in >fink/mozilla
for f in dist/bin/chrome/*.jar; do rm -rf `echo $f | sed -e 's/.jar$//'`; done
touch dist/bin/chrome/user-skins.rdf
touch dist/bin/chrome/user-locales.rdf
rm -f dist/lib/*_s.a
echo "skin,install,select,modern/1.0" >>dist/bin/chrome/installed-chrome.txt
echo "locale,install,select,en-US" >>dist/bin/chrome/installed-chrome.txt
""";
         fink:configureParams "--with-default-mozilla-five-home=%p/lib/%n --libdir=%p/lib/%n --includedir=%p/include/%n --disable-tests --disable-debug --enable-optimize=-O3 --disable-static --enable-extensions --enable-mathml";
         fink:depends :gtk_plus,
                :libjpeg_shlibs,
                :libpng_shlibs,
                :orbit;
         fink:descDetail """Mozilla is an open-source web browser, designed for standards
compliance, performance and portability.
""";
         fink:descPort """- Crypto support (Personal Security Manager) is not ported yet.
""";
         fink:description "Web browser and mail reader";
         fink:docFiles "LEGAL LICENSE";
         fink:homepage "http://www.mozilla.org/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/mozilla-0.9.8-1.info>;
         fink:installScript """install -d -m 755 %i/bin
install -c -m 755 fink/mozilla %i/bin/
install -c -m 755 dist/bin/mozilla-config %i/bin/

install -d -m 755 %i/lib/mozilla
/bin/cp -R -L dist/bin/* %i/lib/mozilla/

install -d -m 755 %i/include/mozilla
/bin/cp -R -L dist/include/* %i/include/mozilla/

install -d -m 755 %i/share/idl/mozilla
install -c -m 644 dist/idl/*.idl %i/share/idl/mozilla/

install -d -m 755 %i/share/gnome/apps/Internet
install -d -m 755 %i/share/gnome/apps/Applications
install -c -m 644 fink/mozilla-address.desktop %i/share/gnome/apps/Internet/
install -c -m 644 fink/mozilla-chatzilla.desktop %i/share/gnome/apps/Internet/
install -c -m 644 fink/mozilla-editor.desktop %i/share/gnome/apps/Applications/
install -c -m 644 fink/mozilla-mail-composer.desktop %i/share/gnome/apps/Internet/
install -c -m 644 fink/mozilla-mail.desktop %i/share/gnome/apps/Internet/
install -c -m 644 fink/mozilla-news.desktop %i/share/gnome/apps/Internet/
install -c -m 644 fink/mozilla.desktop %i/share/gnome/apps/Internet/

install -d -m 755 %i/share/pixmaps
install -c -m 644 build/package/rpm/SOURCES/mozilla-icon.png %i/share/pixmaps/mozilla.png
install -c -m 644 build/package/rpm/SOURCES/mozilla-mail-icon.gif %i/share/pixmaps/mozilla-mail.gif
install -c -m 644 build/package/rpm/SOURCES/mozilla-compose-icon.gif %i/share/pixmaps/mozilla-mail-composer.gif
""";
         fink:license "OSI-Approved";
         fink:maintainer  [
             con:firstName "Masanori";
             con:lastName "Sekino";
             con:mailbox <mailto:msek@users.sourceforge.net> ];
         fink:patch "%f.patch";
         fink:postInstScript """case "$1" in
  configure)
    rm -rf %p/lib/%n/chrome/overlayinfo
    rm -f %p/lib/%n/chrome/*.rdf
    rm -f %p/lib/%n/component.reg
    rm -f %p/lib/%n/components/*.dat
    %p/lib/%n/regxpcom
    %p/lib/%n/regchrome
    ;;
esac
""";
         fink:postRmScript """case "$1" in
  purge)
    rm -rf %p/lib/%n
    ;;
esac
""";
         fink:revision "http://www.mozilla.org/";
         fink:setLDFLAGS "-L%b/dist/lib";
         fink:setLIBS "-L%p/lib";
         fink:source "http://ftp.mozilla.org/pub/%n/releases/%n%v/src/%n-source-%v.tar.bz2";
         fink:sourceDirectory "mozilla" .
    
    :php     fink:packageName "php";
         fink:specificVersion :php_v4_0_6 .
    
    :php_v4_0_6     fink:specificRevision :php_v4_0_6_r4;
         fink:version "4.0.6" .
    
    :php_v4_0_6_r4     fink:buildDepends :expat,
                :freetype2,
                :gdbm,
                :gmp,
                :libxml2,
                :tcltk_dev;
         fink:conffiles "%p/etc/php.ini";
         fink:configureParams "--with-apxs=%p/sbin/apxs --with-config-file-path=%p/etc --with-gd=%p --enable-gd-native-ttf --with-jpeg-dir=%p --with-png-dir=%p --with-zlib-dir=%p --with-freetype-dir=%p --with-zlib --with-bz2=%p --with-gettext=%p";
         fink:depends :apache,
                :bzip2,
                :dlcompat,
                :gd,
                :zlib;
         fink:descDetail """PHP is a scripting language that can be embedded into HTML pages. Like
with CGI scripts, the code is evaluated on the server side (like a CGI
script), allowing you to generate content dynamically. PHP is
implemented as a loadable module for the Apache web server.

PHP has interfaces to almost any database, library and API that you
can think of.
""";
         fink:descPackaging """Only a very small part of the API interfaces are currently
enabled. Uses built-in MySQL support for now.
""";
         fink:descPort """Comes with a hacked version of libtool 1.3.5 that seems to be able to
build loadable modules on Darwin. It needs a small patch to work on
Mac OS X 10.1.
""";
         fink:descUsage """You must add an appropriate LoadModule line to httpd.conf and enable
the handlers for the extensions you want to use (there are examples
for .php in httpd.conf). An example for the LoadModule line:

 LoadModule php4_module lib/apache/1.3/libphp4.so

Additionally, either add an AddModule line or comment out the whole
AddModule section.
""";
         fink:description "HTML-embedded server-side scripting language";
         fink:docFiles "CREDITS EXTENSIONS NEWS apidoc* LICENSE:LICENSE.php";
         fink:homepage "http://www.php.net/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/php-4.0.6-4.info>;
         fink:installScript """ make install INSTALL_ROOT=%d
 mkdir -p %i/etc
 install -m 644 php.ini-dist %i/etc/php.ini
""";
         fink:license "OSI-Approved";
         fink:maintainer  [
             con:mailbox <mailto:fink-devel@lists.sourceforge.net> ];
         fink:patchScript "sed 's|@PREFIX@|%p|g' <%a/%f.patch | patch -p1";
         fink:revision "None <fink-devel@lists.sourceforge.net>";
         fink:source "http://www.php.net/distributions/%n-%v.tar.gz" .
    
    :tidy     fink:packageName "tidy";
         fink:specificVersion :tidy_v4aug00 .
    
    :tidy_v4aug00     fink:specificRevision :tidy_v4aug00_r1;
         fink:version "4aug00" .
    
    :tidy_v4aug00_r1     fink:compileScript "make";
         fink:descDetail """When editing HTML it's easy to make mistakes. Wouldn't it be nice if there was a simple way to fix these mistakes automatically and tidy up sloppy editing into nicely layed out markup? Well now there is! Dave Raggett's HTML TIDY is a free utility for doing just that. It also works great on the atrociously hard to read markup generated by specialized HTML editors and conversion tools, and can help you identify where you need to pay further attention on making your pages more accessible to people with disabilities.
""";
         fink:descPackaging """This program does not use configure. 
The copyright notice is in "tidy.c".
""";
         fink:descPort """Patch the Makefile so that it compiles with cc and install in %p
Patch platform.h so that it doesn't include <sys/types.h> (`uint' is redefined)
""";
         fink:descUsage "tidy messy.html > tidied-up.html";
         fink:description "Utility to tidy up HTML code.";
         fink:docFiles "Overview.html pending.html release-notes.html tidy.c";
         fink:homepage "http://www.w3.org/People/Raggett/tidy/";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/tidy-4aug00-1.info>;
         fink:maintainer  [
             con:firstName "Sylvain";
             con:lastName "Cuaz";
             con:mailbox <mailto:zauc@noos.fr> ];
         fink:patchScript "sed 's:@PREFIX@:%i:g' <%a/%f.patch | patch -p1";
         fink:revision """Patch the Makefile so that it compiles with cc and install in %p
Patch platform.h so that it doesn't include <sys/types.h> (`uint' is redefined)
""";
         fink:source "http://www.w3.org/People/Raggett/tidy%v.tgz" .
    
    :wget     fink:packageName "wget";
         fink:specificVersion :wget_v1_8_1 .
    
    :wget_v1_8_1     fink:specificRevision :wget_v1_8_1_r1;
         fink:version "1.8.1" .
    
    :wget_v1_8_1_r1     fink:confFiles "%p/etc/wgetrc";
         fink:configureParams "--without-ssl --infodir=%p/share/info --mandir=%p/share/man";
         fink:conflicts :wget_ssl;
         fink:descDetail """GNU Wget is a free network utility to retrieve files from the World
Wide Web using HTTP and FTP, the two most widely used Internet
protocols.  It works non-interactively, thus enabling work in the
background, after having logged off.

The recursive retrieval of HTML pages, as well as FTP sites is
supported -- you can use Wget to make mirrors of archives and home
pages, or traverse the web like a WWW robot.

This package compiles wget without SSL (https) support. If you want
SSL support, install wget-ssl instead.

Previous revisions by Christoph Pfisterer <chrisp@users.sourceforge.net>
""";
         fink:descPort """Uses libtool, but only for convenience libraries, so there is no need
to update it.
""";
         fink:description "Automatic web site retreiver";
         fink:docFiles "README COPYING AUTHORS MAILING-LIST NEWS";
         fink:homepage "http://www.gnu.org/software/wget/wget.html";
         fink:infoDocs "wget.info";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/wget-1.8.1-1.info>;
         fink:installScript "make install DESTDIR=%d";
         fink:license "GPL";
         fink:maintainer  [
             con:firstName "Sylvain";
             con:lastName "Cuaz";
             con:mailbox <mailto:zauc@noos.fr> ];
         fink:replaces :wget_ssl;
         fink:revision "Sylvain Cuaz <zauc@noos.fr>";
         fink:setCPPFLAGS "-no-cpp-precomp";
         fink:source "gnu" .
    
    :zope     fink:packageName "zope";
         fink:specificVersion :zope_v2_5_0 .
    
    :zope_v2_5_0     fink:specificRevision :zope_v2_5_0_r1;
         fink:version "2.5.0" .
    
    :zope_v2_5_0_r1     fink:buildDepends :db3,
                :expat,
                :gdbm,
                :gmp,
                :libxml2,
                :python,
                :readline,
                :tcltk_dev;
         fink:compileScript """  %p/bin/python wo_pcgi.py
  /usr/bin/find %b -name '*.pyc' |xargs -n1 /bin/rm
  /usr/bin/find %b -name 'sedscript' |xargs -n1 /bin/rm
  /usr/bin/find %b -name 'Makefile.pre*' |xargs -n1 /bin/rm
  /usr/bin/find %b -name 'config.c' |xargs -n1 /bin/rm 
""";
         fink:confFiles "%p/etc/zope/zope.cnf";
         fink:conflicts :system_zope;
         fink:daemonicFile """<service>
<description>Zope Web Application Server</description>
<message>Zope Web Application Server</message>

<daemon name="zope">
<executable>%p/sbin/zopectl</executable>

<parameters>start</parameters>
<configfile>%p/var/lib/zope/access</configfile>
<pidfile>%p/var/lib/zope/var/Z2.pid</pidfile>
</daemon>

</service>
""";
         fink:depends :daemonic,
                :python;
         fink:descDetail """Zope enables teams to collaborate in the creation and management of dynamic   
web-based business applications such as intranets and portals. Zope makes it
easy to build features such as site search, news, personalisation, and
e-commerce into your web applications.
""";
         fink:descPort """Customised the Debian postinst script and start/stop script zopectl 
by Gregor Hoffleit <flight@debian.org>.
""";
         fink:descUsage """The default web port for Zope is 8080. You can modify this port in the file
  /sw/etc/zope/zope.cnf. 
The command line option '-P 9000', for example, will make 9080 the web server
port and 9021 the ftp port. See 'man zope-z2' for more details.

You can use the command zope-zpasswd to set the zope superuser password:
 zope-zpasswd /sw/var/lib/zope/access

You can start/stop the server using the command
  zopectl start/stop

Afterwards you can connect to the server using a web browser pointing to
  http://localhost:8080

If you want to start the Zope server automatically at system startup, execute
  daemonic enable zope

To disable it, run
  daemonic disable zope
""";
         fink:description "Open Source Web Application Server";
         fink:docFiles ">>";
         fink:homepage "http://www.zope.com";
         fink:infoFrom <../../../../../../../sw/fink/dists/stable/main/finkinfo/web/zope-2.5.0-1.info>;
         fink:installScript """  install -d -m 755 %i/lib/zope/
  install -c -m 755 z2.py zpasswd.py %i/lib/zope
  install -d -m 755 %i/lib/zope/Extensions
  /bin/cp -R -L Extensions/* %i/lib/zope/Extensions
  install -d -m 755 %i/lib/zope/ZServer
  /bin/cp -R -L ZServer/* %i/lib/zope/ZServer
  install -d -m 755 %i/lib/zope/import
  /bin/cp -R -L import/* %i/lib/zope/import
  install -d -m 755 %i/lib/zope/lib
  /bin/cp -R -L lib/* %i/lib/zope/lib
  install -d -m 755 %i/lib/zope/pcgi
  /bin/cp -R -L pcgi/* %i/lib/zope/pcgi
  install -d -m 755 %i/lib/zope/utilities
  /bin/cp -R -L utilities/* %i/lib/zope/utilities
  install -d -m 755 %i/var/lib/zope
  install -d -owww -m 755 %i/var/lib/zope/var
  install -c -owww -m 644 var/Data.fs.in %i/var/lib/zope/var 
  install -d -m 755 %i/sbin
  ln -s ../lib/zope/z2.py %i/sbin/zope-z2
  ln -s ../lib/zope/zpasswd.py %i/sbin/zope-zpasswd
  install -d -m 755 %i/etc/zope
  install -c -m 755 zope.cnf %i/etc/zope
  install -c -m 755 zopectl %i/sbin
  install -d -m 755 %i/share/man/man8
  /usr/bin/gzip *.8
  install -c -m 644 *.8.gz %i/share/man/man8
""";
         fink:license "OSI-Approved";
         fink:maintainer  [
             con:firstName "Kilian";
             con:lastName "Koepsell";
             con:mailbox <mailto:kilian@users.sourceforge.net> ];
         fink:patchScript "sed 's|@PREFIX@|%p|g' <%a/%f.patch | patch -p1";
         fink:postInstScript """#   sample postinst script for Debian python packages
#   written 1998 by Gregor Hoffleit <flight@debian.org>
#   modified for fink by Kilian Koepsell <kilian@users.sf.net>

# byte-compile the python source files
%p/bin/python %p/lib/python2.1/compileall.py %p/lib/zope

# make the Zope instance owned by the www user
chown -R www.admin %p/var/lib/zope/var

# setting up the administrator user
if [ ! -f %p/var/lib/zope/access ] ; then
  echo
  echo "We will now set up an administrator user in Zope."
  echo "Please choose a username and a password for the Zope administrator:"
  echo "(This username and the password are only used inside Zope. They are"
  echo "completely unrelated to your system's accounts.)"
  echo
  echo "You can encrypt the password in SHA, CRYPT or CLEARTEXT."
  echo
  echo "You can limit the domains from which the administrator can login"
  echo "into Zope, by providing a list of domain names separated with spaces."
  echo
  %p/sbin/zope-zpasswd %p/var/lib/zope/access
fi

# If we don't have an Data.fs, create one from the new template!
if [ ! -f %p/var/lib/zope/var/Data.fs ]; then
    cp %p/var/lib/zope/var/Data.fs.in %p/var/lib/zope/var/Data.fs
    chown www.admin %p/var/lib/zope/var/Data.fs
    chmod 600 %p/var/lib/zope/var/Data.fs
    fi

# update init script if necessary
daemonic install zope
""";
         fink:preRmScript """#   sample prerm script for Debian python packages
#   written 1998 by Gregor Hoffleit <flight@debian.org>
#   modified for fink by Kilian Koepsell <kilian@users.sf.net>

PACKAGE=zope

dpkg --listfiles $PACKAGE |
        awk '$0~/\\.py$/ {print $0"c\\n" $0"o"}' |
        xargs rm -f >&2

# clean up
if [ $1 != "upgrade" ]; then
  daemonic remove zope
fi
""";
         fink:replaces :system_zope;
         fink:revision "Kilian Koepsell <kilian@users.sourceforge.net>";
         fink:source "http://www.zope.org/Products/Zope/2.5.0/Zope-2.5.0-src.tgz" .
    
#ENDS
