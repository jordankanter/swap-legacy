#  Extract action state from infoset of HTML of agenda page
#
#

@prefix : <track#>.
@prefix  t: <track#>.

@prefix r:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix s: <http://www.w3.org/2000/01/rdf-schema#> .

@prefix doc: <http://www.w3.org/2000/10/swap/pim/doc#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix daml: <http://www.daml.org/2001/03/daml+oil#> .
@prefix xml: <http://www.w3.org/2000/10/swap/xml#> .
@prefix contact: <http://www.w3.org/2000/10/swap/pim/contact#> .


@forAll :a, :b, :c, :d, :e, :f, :g, :h, :j, :k, :p, :s, :t, :w, :x, :y, :z.

#() :elementsOnly ().
##
#{  :y daml:first [ log:rawType log:String ] ;
#		daml:rest :z.
#   :z :elementsOnly :w.
# } log:implies {
#    :y :elementsOnly :w.
#}
#
#{  :y daml:first :x; daml:rest :z.
#   :x log:rawType log:Other;
#   :z :elementsOnly :w.
# } log:implies {
#    :y :elementsOnly [daml:first :x; daml:rest :w].
#}.

{  [] xml:ln "tr";
    xml:zcontent [ daml:first :t ].
#    xml:zcontent ( :t :p :a :s :d :y).
   :t xml:ln "td"; xml:zcontent :x.
}   log:implies {
   :x a :SUCCESS1.
   :t a :COLUMN1
}.

{  [] xml:ln "tr";
    xml:zcontent [ daml:first :t; daml:rest [daml:first :p ]].
#    xml:zcontent ( :t :p :a :s :d :y).
   :t xml:ln "td"; xml:zcontent :x.
}   log:implies {
   :x a :SUCCESS2.
}.

{  [] xml:ln "tr";
#    xml:zcontent [ daml:first :t ].
    xml:zcontent ( :t :p :a :s :d :y).
   :t xml:ln "td"; xml:zcontent :x.
}   log:implies {
   :x a :fiver.
}.
{  [] xml:ln "tr";
#    xml:zcontent [ daml:first :t ].
    xml:zcontent ( :t :p :a :s :d :y).
   :t xml:ln "td"; xml:zcontent :x.
}   log:implies {
   :x a :sixer.
}.
{  [] xml:ln "tr";
#    xml:zcontent [ daml:first :t ].
    xml:zcontent ( :t :p :a :s :d :y :z).
   :t xml:ln "td"; xml:zcontent :x.
}   log:implies {
   :x a :sevener.
}.
#{ [ :topic :w; :assignedTo :p; :assigndeAt :a; :status :s; :delta :d]}.

#ends
