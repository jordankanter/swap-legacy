#!/usr/bin/make -f
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=1

destdir  := $(shell pwd)/debian/tmp
libdir='/usr/lib/python2.2'
pkg_name := $(shell basename `pwd` | sed -e 's/^\(.*\)-[^-]*$$/\1/')

build: build-stamp
	@echo "packaging code for destination libdir="
	@echo $(libdir)
build-stamp:
	dh_testdir

	# Add here commands to compile the package.
	#$(MAKE)
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp

	# Add here commands to clean up after the build process.
	#-$(MAKE) clean

	####danbri edit: 
	####-rm -f debian/dirs

	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	(echo $(libdir); \
	 echo usr/share/doc/$(pkg_name); \
	) > debian/dirs
	dh_installdirs

	##danbri fixup needed:
	# Add here commands to install the package into debian/tmp.
	# ok, our top level installer script / makefile now saves config.save
	python setup.py install

# Build architecture-dependent files here.
binary-arch: build install
# We have nothing to do by default.

# Build architecture-independent files here.
binary-indep: build install
#	dh_testversion
	dh_testdir
	dh_testroot
#	dh_installdebconf	
	dh_installdocs
	#tar cf - doc.en doc.ja | \
	#  (cd $(destdir)/usr/share/doc/$(pkg_name) && tar xvf -)
	dh_installexamples
	/bin/sh debian/fixpath.sh $(destdir)
#	dh_installmenu
#	dh_installemacsen
#	dh_installpam
#	dh_installinit
#	dh_installcron
#	dh_installmanpages
#	dh_installinfo
#	dh_undocumented
	dh_installchangelogs 
#	dh_link
#	dh_strip
	dh_compress
	dh_fixperms
	# You may want to make some executables suid here.
#	dh_suidregister
#	dh_makeshlibs
	dh_installdeb
#	dh_perl
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
